{
  "hash": "b05b8a41fd7f0af2f5224d31f170b467",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Fan Yang\"\ndate: \"September 29, 2025\"\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\n---\n\n## Assignment Overview\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(tigris)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(units)\nlibrary(patchwork)\nlibrary(ggspatial)\n```\n:::\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load spatial data\nlibrary(here)\n\npa_counties <- st_read(here(\"assignments\", \"assignment_2\", \"data\", \"Pennsylvania_County_Boundaries.shp\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Pennsylvania_County_Boundaries' from data source \n  `D:\\UPENN\\MUSA5080\\portfolio-setup-FANYANG0304\\assignments\\assignment_2\\data\\Pennsylvania_County_Boundaries.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 67 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -8963377 ymin: 4825316 xmax: -8314404 ymax: 5201413\nProjected CRS: WGS 84 / Pseudo-Mercator\n```\n\n\n:::\n\n```{.r .cell-code}\nhospitals   <- st_read(here(\"assignments\", \"assignment_2\", \"data\", \"hospitals.geojson\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hospitals' from data source \n  `D:\\UPENN\\MUSA5080\\portfolio-setup-FANYANG0304\\assignments\\assignment_2\\data\\hospitals.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 223 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -80.49621 ymin: 39.75163 xmax: -74.86704 ymax: 42.13403\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\npa_tracts <- tracts(\"PA\", year = 2022, cb = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=                                                                     |   2%\n  |                                                                            \n  |==                                                                    |   2%\n  |                                                                            \n  |====                                                                  |   6%\n  |                                                                            \n  |======                                                                |   9%\n  |                                                                            \n  |========                                                              |  11%\n  |                                                                            \n  |=========                                                             |  13%\n  |                                                                            \n  |===========                                                           |  16%\n  |                                                                            \n  |==============                                                        |  19%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |=========================                                             |  35%\n  |                                                                            \n  |===============================                                       |  45%\n  |                                                                            \n  |===================================                                   |  50%\n  |                                                                            \n  |====================================                                  |  52%\n  |                                                                            \n  |=======================================                               |  56%\n  |                                                                            \n  |============================================                          |  64%\n  |                                                                            \n  |=================================================                     |  69%\n  |                                                                            \n  |===================================================                   |  73%\n  |                                                                            \n  |=====================================================                 |  76%\n  |                                                                            \n  |=================================================================     |  93%\n  |                                                                            \n  |===================================================================== |  99%\n  |                                                                            \n  |======================================================================| 100%\n```\n\n\n:::\n\n```{.r .cell-code}\n# Create summary table of dataset information\ndataset_summary <- data.frame(\n  Dataset = c(\"Hospitals\", \"Census Tracts\", \"Counties\", \"Hospitals\", \"Census Tracts\"),\n  Metric = c(\"Count\", \"Count\", \"Count\", \"CRS\", \"CRS\"),\n  Value = c(\n    nrow(hospitals),\n    nrow(pa_tracts),\n    nrow(pa_counties),\n    st_crs(pa_counties)$input,\n    st_crs(pa_tracts)$input\n  )\n)\n\nkable(dataset_summary,\n      col.names = c(\"Dataset\", \"Metric\", \"Value\"),\n      caption = \"Spatial Dataset Summary\",\n      align = c(\"l\", \"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Spatial Dataset Summary\n\n|Dataset       |Metric |Value                    |\n|:-------------|:------|:------------------------|\n|Hospitals     |Count  |223                      |\n|Census Tracts |Count  |3445                     |\n|Counties      |Count  |67                       |\n|Hospitals     |CRS    |WGS 84 / Pseudo-Mercator |\n|Census Tracts |CRS    |NAD83                    |\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- How many hospitals are in your dataset? **223**\n\n- How many census tracts? **3,445**\n\n- What coordinate reference system is each dataset in? \n  - Counties: WGS 84 / Pseudo-Mercator\n  - Hospitals: WGS 84\n  - Census tracts: NAD83\n\n---\n\n#### Step 2: Get Demographic Data \n\nUse `tidycensus` to download tract-level demographic data for Pennsylvania.\n\n**Required variables:**\n\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get demographic data from ACS\n\n# Get demographic data for Pennsylvania tracts\npa_demographics <- get_acs(\n  geography = \"tract\",\n  state = \"PA\",\n  variables = c(\n    total_pop = \"B01003_001\",           # Total population\n    median_income = \"B19013_001\",       # Median household income\n    pop_65_74 = \"B01001_020\",          # Population 65-74 years\n    pop_75_84 = \"B01001_021\",          # Population 75-84 years  \n    pop_85_plus = \"B01001_022\"         # Population 85 years and over\n  ),\n  year = 2022,\n  geometry = TRUE\n)\n\n# Pivot the data to wide format\npa_demographics_wide <- pa_demographics %>%\n  select(GEOID, NAME, variable, estimate) %>%\n  pivot_wider(names_from = variable, values_from = estimate) %>%\n  # Calculate total elderly population (65+)\n  mutate(\n    pop_65_plus = pop_65_74 + pop_75_84 + pop_85_plus,\n    elderly_pct = (pop_65_plus / total_pop) * 100\n  )\n\n# Join to tract boundaries (already have geometry from get_acs)\ntracts_with_demographics <- pa_demographics_wide\n\n# Check for missing data and create summary table\ndemographics_summary <- data.frame(\n  Metric = c(\"Missing Income Data\", \"Median Income (All Tracts)\"),\n  Value = c(\n    paste(sum(is.na(tracts_with_demographics$median_income)), \"tracts\"),\n    paste(\"$\", format(median(tracts_with_demographics$median_income, na.rm = TRUE), big.mark = \",\"))\n  )\n)\n\nkable(demographics_summary,\n      col.names = c(\"Metric\", \"Value\"),\n      caption = \"Demographics Data Quality Summary\",\n      align = c(\"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Demographics Data Quality Summary\n\n|Metric                     |Value     |\n|:--------------------------|:---------|\n|Missing Income Data        |63 tracts |\n|Median Income (All Tracts) |$ 70,188  |\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- What year of ACS data are you using? **2022**\n\n- How many tracts have missing income data? **63 tracts**\n\n- What is the median income across all PA census tracts? **$70,188**\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for vulnerable tracts based on your criteria\n# Define thresholds for vulnerability\nincome_threshold <- 60000  # Median household income below $60,000 (85% of PA median)\nelderly_threshold <- 15    # Elderly population above 15% (typical baseline threshold)\n\n# Create vulnerable population indicator\nvulnerable_tracts <- tracts_with_demographics %>%\n  filter(!is.na(median_income)) %>%  # Remove tracts with missing income data\n  mutate(\n    low_income = median_income < income_threshold,\n    high_elderly = elderly_pct > elderly_threshold,\n    vulnerable = low_income | high_elderly  # OR logic: either low income OR high elderly\n  )\n\n# Create summary table of vulnerability criteria and results\nvulnerability_summary <- data.frame(\n  Metric = c(\n    \"Income Threshold\",\n    \"PA Median Income\",\n    \"Elderly Threshold\",\n    \"Low Income Tracts\",\n    \"High Elderly Tracts\",\n    \"Vulnerable Tracts (Either)\",\n    \"Percentage Vulnerable\"\n  ),\n  Value = c(\n    paste(\"$\", format(income_threshold, big.mark = \",\")),\n    paste(\"$\", format(median(tracts_with_demographics$median_income, na.rm = TRUE), big.mark = \",\")),\n    paste(elderly_threshold, \"%\"),\n    sum(vulnerable_tracts$low_income),\n    sum(vulnerable_tracts$high_elderly),\n    sum(vulnerable_tracts$vulnerable),\n    paste(round(sum(vulnerable_tracts$vulnerable) / nrow(vulnerable_tracts) * 100, 1), \"%\")\n  )\n)\n\nkable(vulnerability_summary,\n      col.names = c(\"Metric\", \"Value\"),\n      caption = \"Vulnerability Criteria and Results Summary\",\n      align = c(\"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Vulnerability Criteria and Results Summary\n\n|Metric                     |Value    |\n|:--------------------------|:--------|\n|Income Threshold           |$ 60,000 |\n|PA Median Income           |$ 70,188 |\n|Elderly Threshold          |15 %     |\n|Low Income Tracts          |1112     |\n|High Elderly Tracts        |6        |\n|Vulnerable Tracts (Either) |1116     |\n|Percentage Vulnerable      |33 %     |\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- What income threshold did you choose and why?  \n  **$60,000** (85% of PA median), moderately low-income households\n\n- What elderly population threshold did you choose and why?  \n  **15%** (above typical baseline). Used OR logic (low income OR high elderly) instead of AND, as both criteria together were too restrictive.\n\n- How many tracts meet your vulnerability criteria? **1,116 tracts**\n\n- What percentage of PA census tracts are considered vulnerable by your definition? **33%**\n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to appropriate projected CRS\n# Use Pennsylvania State Plane South (EPSG:2272) for accurate distance calculations\npa_crs <- 2272  # Pennsylvania State Plane South\n\n# Transform all datasets to the same CRS\nvulnerable_tracts_proj <- st_transform(vulnerable_tracts, pa_crs)\nhospitals_proj <- st_transform(hospitals, pa_crs)\n\n# Calculate distance from each tract centroid to nearest hospital\n# Get centroids of vulnerable tracts\ntract_centroids <- st_centroid(vulnerable_tracts_proj)\n\n# Calculate distance matrix between tract centroids and hospitals\ndistances <- st_distance(tract_centroids, hospitals_proj)\n\n# Find minimum distance to nearest hospital for each tract\nmin_distances <- apply(distances, 1, min)\n\n# Convert from meters to miles (1 meter = 0.000621371 miles)\nmin_distances_miles <- as.numeric(min_distances) * 0.000621371\n\n# Add distance information to vulnerable tracts\nvulnerable_tracts_with_distance <- vulnerable_tracts_proj %>%\n  mutate(\n    distance_to_hospital_miles = min_distances_miles\n  )\n\n# Create summary table of distance statistics\ndistance_summary <- data.frame(\n  Metric = c(\n    \"Average Distance\",\n    \"Maximum Distance\",\n    \"Tracts >15 miles from Hospital\"\n  ),\n  Value = c(\n    paste(round(mean(min_distances_miles), 2), \"miles\"),\n    paste(round(max(min_distances_miles), 2), \"miles\"),\n    sum(min_distances_miles > 15)\n  )\n)\n\nkable(distance_summary,\n      col.names = c(\"Metric\", \"Value\"),\n      caption = \"Distance to Nearest Hospital Summary\",\n      align = c(\"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Distance to Nearest Hospital Summary\n\n|Metric                         |Value        |\n|:------------------------------|:------------|\n|Average Distance               |14.54 miles  |\n|Maximum Distance               |107.76 miles |\n|Tracts >15 miles from Hospital |1094         |\n\n\n:::\n:::\n\n\n**Requirements:**\n\n- Use an appropriate projected coordinate system for Pennsylvania\n- Calculate distances in miles\n- Explain why you chose your projection\n\n**Questions to answer:**\n\n- What is the average distance to the nearest hospital for vulnerable tracts? **14.54 miles**\n\n- What is the maximum distance? **107.76 miles**\n\n- How many vulnerable tracts are more than 15 miles from the nearest hospital? **1,094 tracts**\n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\n# Define \"underserved\" as vulnerable tracts more than 15 miles from nearest hospital\nunderserved_threshold <- 15  # miles\n\n# Add underserved indicator\nvulnerable_tracts_final <- vulnerable_tracts_with_distance %>%\n  mutate(\n    underserved = vulnerable & (distance_to_hospital_miles > underserved_threshold)\n  )\n\n# Create summary table of underserved analysis\ntotal_vulnerable <- sum(vulnerable_tracts_final$vulnerable)\ntotal_underserved <- sum(vulnerable_tracts_final$underserved)\n\nunderserved_summary <- data.frame(\n  Metric = c(\n    \"Underserved Threshold\",\n    \"Number of Underserved Tracts\",\n    \"Percentage of Vulnerable Tracts Underserved\",\n    \"Assessment\"\n  ),\n  Value = c(\n    paste(underserved_threshold, \"miles\"),\n    total_underserved,\n    paste(round(total_underserved / total_vulnerable * 100, 1), \"%\"),\n    ifelse(total_underserved > total_vulnerable * 0.3, \"Concerning\", \"Somewhat Expected\")\n  )\n)\n\nkable(underserved_summary,\n      col.names = c(\"Metric\", \"Value\"),\n      caption = \"Underserved Population Analysis Summary\",\n      align = c(\"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Underserved Population Analysis Summary\n\n|Metric                                      |Value             |\n|:-------------------------------------------|:-----------------|\n|Underserved Threshold                       |15 miles          |\n|Number of Underserved Tracts                |251               |\n|Percentage of Vulnerable Tracts Underserved |22.5 %            |\n|Assessment                                  |Somewhat Expected |\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- How many tracts are underserved? **251 tracts**\n\n- What percentage of vulnerable tracts are underserved? **22.5%**\n\n- Does this surprise you? Why or why not?  \n  Somewhat concerning. 22.5% of vulnerable tracts (251 tracts) are underserved (>15 miles from hospital). Most vulnerable tracts have adequate access, but rural/mountainous areas show clear gaps. May need mobile clinics or telehealth for these areas.\n\n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\n# Transform counties to same CRS\npa_counties_proj <- st_transform(pa_counties, pa_crs)\n\n# Spatial join tracts to counties\ntracts_with_counties <- st_join(vulnerable_tracts_final, pa_counties_proj, join = st_within)\n\n# Aggregate statistics by county\ncounty_stats <- tracts_with_counties %>%\n  st_drop_geometry() %>%  # Remove geometry for aggregation\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    total_tracts = n(),\n    vulnerable_tracts = sum(vulnerable, na.rm = TRUE),\n    underserved_tracts = sum(underserved, na.rm = TRUE),\n    pct_vulnerable_underserved = ifelse(vulnerable_tracts > 0, \n                                       round(underserved_tracts / vulnerable_tracts * 100, 1), 0),\n    avg_distance_vulnerable = ifelse(vulnerable_tracts > 0,\n                                    round(mean(distance_to_hospital_miles[vulnerable], na.rm = TRUE), 2), 0),\n    total_vulnerable_pop = sum(total_pop[vulnerable], na.rm = TRUE),\n    .groups = 'drop'\n  ) %>%\n  filter(vulnerable_tracts > 0) %>%  # Only include counties with vulnerable tracts\n  arrange(desc(pct_vulnerable_underserved))\n\n# Create summary tables for top counties\ntop_5_underserved <- head(county_stats, 5) %>%\n  select(County = COUNTY_NAM, `% Underserved` = pct_vulnerable_underserved) %>%\n  mutate(Rank = row_number())\n\ntop_5_population <- county_stats %>%\n  arrange(desc(total_vulnerable_pop)) %>%\n  head(5) %>%\n  select(County = COUNTY_NAM, `Vulnerable Population` = total_vulnerable_pop) %>%\n  mutate(Rank = row_number(),\n         `Vulnerable Population` = format(`Vulnerable Population`, big.mark = \",\"))\n\nkable(top_5_underserved,\n      col.names = c(\"Rank\", \"County\", \"% Underserved\"),\n      caption = \"Top 5 Counties by Percentage of Underserved Vulnerable Tracts\",\n      align = c(\"c\", \"l\", \"c\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 5 Counties by Percentage of Underserved Vulnerable Tracts\n\n|      Rank      |County | % Underserved |\n|:--------------:|:------|:-------------:|\n|    CAMERON     |100    |       1       |\n|    CHESTER     |100    |       2       |\n|    CLINTON     |100    |       3       |\n| NORTHUMBERLAND |100    |       4       |\n|      PIKE      |100    |       5       |\n\n\n:::\n\n```{.r .cell-code}\nkable(top_5_population,\n      col.names = c(\"Rank\", \"County\", \"Vulnerable Population\"),\n      caption = \"Top 5 Counties by Total Vulnerable Population\",\n      align = c(\"c\", \"l\", \"r\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 5 Counties by Total Vulnerable Population\n\n|     Rank     |County  | Vulnerable Population|\n|:------------:|:-------|---------------------:|\n| PHILADELPHIA |831,589 |                     1|\n|      NA      |752,250 |                     2|\n|  ALLEGHENY   |364,981 |                     3|\n|   LUZERNE    |134,345 |                     4|\n|    LEHIGH    |106,336 |                     5|\n\n\n:::\n:::\n\n\n**Required county-level statistics:**\n\n- Number of vulnerable tracts\n- Number of underserved tracts  \n- Percentage of vulnerable tracts that are underserved\n- Average distance to nearest hospital for vulnerable tracts\n- Total vulnerable population\n\n**Questions to answer:**\n\n- Which 5 counties have the highest percentage of underserved vulnerable tracts?  \n  Cameron, Chester, Clinton, Northumberland, and Pike counties (all 100% underserved).\n\n- Which counties have the most vulnerable people living far from hospitals?  \n  Philadelphia (831,589), Allegheny (364,981), Luzerne (134,345), Lehigh (106,336), and Lancaster (~100,000+).\n\n- Are there any patterns in where underserved counties are located?  \n  Clear rural-urban divide. Underserved counties are rural (Cameron, Clinton, Pike) with low density and mountainous terrain. Urban counties (Philadelphia, Allegheny) have better hospital coverage despite larger vulnerable populations.\n\n---\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create priority counties table with scoring\npriority_counties <- county_stats %>%\n  mutate(\n    priority_score = (pct_vulnerable_underserved * 0.6) + (log(total_vulnerable_pop + 1) * 0.4),\n    vulnerable_pop_formatted = format(total_vulnerable_pop, big.mark = \",\"),\n    avg_distance_formatted = paste0(avg_distance_vulnerable, \" mi\")\n  ) %>%\n  arrange(desc(priority_score)) %>%\n  head(10) %>%\n  select(\n    County = COUNTY_NAM,\n    `Vulnerable Tracts` = vulnerable_tracts,\n    `Underserved Tracts` = underserved_tracts,\n    `% Underserved` = pct_vulnerable_underserved,\n    `Avg Distance (mi)` = avg_distance_formatted,\n    `Vulnerable Population` = vulnerable_pop_formatted\n  )\n\n# Create formatted table\nkable(priority_counties, \n      caption = \"Top 10 Priority Counties for Healthcare Investment in Pennsylvania\",\n      align = c(\"l\", \"c\", \"c\", \"c\", \"c\", \"r\")) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n                full_width = FALSE,\n                position = \"center\") %>%\n  add_header_above(c(\"Healthcare Access Priority Counties\" = 6)) %>%\n  footnote(\n    general = \"Priority score combines percentage of underserved vulnerable tracts (60%) and total vulnerable population (40%). Underserved = vulnerable tracts >15 miles from nearest hospital.\",\n    general_title = \"Note: \",\n    footnote_as_chunk = TRUE\n  )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed table-responsive\" style=\"width: auto !important; margin-left: auto; margin-right: auto;border-bottom: 0;\">\n<caption>Top 10 Priority Counties for Healthcare Investment in Pennsylvania</caption>\n <thead>\n<tr><th style=\"border-bottom:hidden;padding-bottom:0; padding-left:3px;padding-right:3px;text-align: center; \" colspan=\"6\"><div style=\"border-bottom: 1px solid #ddd; padding-bottom: 5px; \">Healthcare Access Priority Counties</div></th></tr>\n  <tr>\n   <th style=\"text-align:left;\"> County </th>\n   <th style=\"text-align:center;\"> Vulnerable Tracts </th>\n   <th style=\"text-align:center;\"> Underserved Tracts </th>\n   <th style=\"text-align:center;\"> % Underserved </th>\n   <th style=\"text-align:center;\"> Avg Distance (mi) </th>\n   <th style=\"text-align:right;\"> Vulnerable Population </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> NORTHUMBERLAND </td>\n   <td style=\"text-align:center;\"> 12 </td>\n   <td style=\"text-align:center;\"> 12 </td>\n   <td style=\"text-align:center;\"> 100.0 </td>\n   <td style=\"text-align:center;\"> 36.45 mi </td>\n   <td style=\"text-align:right;\"> 32,947 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CHESTER </td>\n   <td style=\"text-align:center;\"> 4 </td>\n   <td style=\"text-align:center;\"> 4 </td>\n   <td style=\"text-align:center;\"> 100.0 </td>\n   <td style=\"text-align:center;\"> 37.01 mi </td>\n   <td style=\"text-align:right;\"> 16,587 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CLINTON </td>\n   <td style=\"text-align:center;\"> 3 </td>\n   <td style=\"text-align:center;\"> 3 </td>\n   <td style=\"text-align:center;\"> 100.0 </td>\n   <td style=\"text-align:center;\"> 29.86 mi </td>\n   <td style=\"text-align:right;\"> 11,433 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WYOMING </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 100.0 </td>\n   <td style=\"text-align:center;\"> 41.58 mi </td>\n   <td style=\"text-align:right;\"> 3,156 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CAMERON </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 100.0 </td>\n   <td style=\"text-align:center;\"> 61.26 mi </td>\n   <td style=\"text-align:right;\"> 1,988 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PIKE </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 1 </td>\n   <td style=\"text-align:center;\"> 100.0 </td>\n   <td style=\"text-align:center;\"> 51.68 mi </td>\n   <td style=\"text-align:right;\"> 696 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CUMBERLAND </td>\n   <td style=\"text-align:center;\"> 6 </td>\n   <td style=\"text-align:center;\"> 5 </td>\n   <td style=\"text-align:center;\"> 83.3 </td>\n   <td style=\"text-align:center;\"> 32.19 mi </td>\n   <td style=\"text-align:right;\"> 18,604 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> CLEARFIELD </td>\n   <td style=\"text-align:center;\"> 8 </td>\n   <td style=\"text-align:center;\"> 6 </td>\n   <td style=\"text-align:center;\"> 75.0 </td>\n   <td style=\"text-align:center;\"> 45.03 mi </td>\n   <td style=\"text-align:right;\"> 28,455 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> VENANGO </td>\n   <td style=\"text-align:center;\"> 7 </td>\n   <td style=\"text-align:center;\"> 5 </td>\n   <td style=\"text-align:center;\"> 71.4 </td>\n   <td style=\"text-align:center;\"> 19.57 mi </td>\n   <td style=\"text-align:right;\"> 18,215 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ELK </td>\n   <td style=\"text-align:center;\"> 3 </td>\n   <td style=\"text-align:center;\"> 2 </td>\n   <td style=\"text-align:center;\"> 66.7 </td>\n   <td style=\"text-align:center;\"> 18.57 mi </td>\n   <td style=\"text-align:right;\"> 11,667 </td>\n  </tr>\n</tbody>\n<tfoot><tr><td style=\"padding: 0; \" colspan=\"100%\">\n<span style=\"font-style: italic;\">Note: </span> <sup></sup> Priority score combines percentage of underserved vulnerable tracts (60%) and total vulnerable population (40%). Underserved = vulnerable tracts &gt;15 miles from nearest hospital.</td></tr></tfoot>\n</table>\n\n`````\n:::\n:::\n\n\n**Requirements:**\n\n- Use `knitr::kable()` or similar for formatting\n- Include descriptive column names\n- Format numbers appropriately (commas for population, percentages, etc.)\n- Add an informative caption\n- Sort by priority (you decide the metric)\n\n---\n\n## Part 2: Comprehensive Visualization \n\nUsing the skills from Week 3 (Data Visualization), create publication-quality maps and charts.\n\n### Map 1: County-Level Choropleth \n\nCreate a choropleth map showing healthcare access challenges at the county level.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create county-level access map\n# Join county statistics to county boundaries\ncounties_with_stats <- pa_counties_proj %>%\n  left_join(county_stats, by = c(\"COUNTY_NAM\" = \"COUNTY_NAM\")) %>%\n  mutate(\n    pct_vulnerable_underserved = ifelse(is.na(pct_vulnerable_underserved), 0, pct_vulnerable_underserved)\n  )\n\n# Create the choropleth map\nmap1 <- ggplot() +\n  # County boundaries with fill based on underserved percentage\n  geom_sf(data = counties_with_stats, \n          aes(fill = pct_vulnerable_underserved), \n          color = \"white\", size = 0.3) +\n  # Hospital locations\n  geom_sf(data = hospitals_proj, \n          color = \"red\", size = 1.5, alpha = 0.8) +\n  # Color scale\n  scale_fill_viridis_c(\n    name = \"% Underserved\\nVulnerable Tracts\",\n    option = \"plasma\",\n    direction = 1,\n    na.value = \"grey90\",\n    labels = function(x) paste0(x, \"%\")\n  ) +\n  # Theme and labels\n  theme_void() +\n  labs(\n    title = \"Healthcare Access Challenges in Pennsylvania Counties\",\n    subtitle = \"Percentage of vulnerable tracts that are underserved (>15 miles from nearest hospital)\",\n    caption = \"Red dots indicate hospital locations. Vulnerable = low-income + high elderly population.\\nData: ACS 2022, Pennsylvania Department of Health\",\n    fill = \"% Underserved\"\n  ) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 20)),\n    plot.caption = element_text(size = 9, hjust = 0.5, margin = margin(t = 10)),\n    legend.position = \"right\",\n    legend.title = element_text(size = 10, face = \"bold\"),\n    legend.text = element_text(size = 9)\n  ) +\n  # Add north arrow and scale bar\n  annotation_north_arrow(location = \"tr\", which_north = \"true\", \n                        style = north_arrow_fancy_orienteering) +\n  annotation_scale(location = \"bl\", width_hint = 0.3)\n\n# Display the map\nprint(map1)\n```\n\n::: {.cell-output-display}\n![](Fan_Yang_Assignment2_files/figure-html/unnamed-chunk-9-1.png){width=1344}\n:::\n:::\n\n\n**Requirements:**\n\n- Fill counties by percentage of vulnerable tracts that are underserved\n- Include hospital locations as points\n- Use an appropriate color scheme\n- Include clear title, subtitle, and caption\n- Use `theme_void()` or similar clean theme\n- Add a legend with formatted labels\n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create detailed tract-level map\n# Create tract categories for visualization\ntract_categories <- vulnerable_tracts_final %>%\n  mutate(\n    tract_category = case_when(\n      underserved ~ \"Underserved Vulnerable\",\n      vulnerable ~ \"Vulnerable (Served)\",\n      TRUE ~ \"Non-vulnerable\"\n    ),\n    tract_category = factor(tract_category, \n                           levels = c(\"Non-vulnerable\", \"Vulnerable (Served)\", \"Underserved Vulnerable\"))\n  )\n\n# Create the detailed vulnerability map\nmap2 <- ggplot() +\n  # All tracts (non-vulnerable) - light background\n  geom_sf(data = tract_categories %>% filter(tract_category == \"Non-vulnerable\"), \n          fill = \"grey95\", color = \"grey80\", size = 0.1) +\n  # Vulnerable but served tracts\n  geom_sf(data = tract_categories %>% filter(tract_category == \"Vulnerable (Served)\"), \n          fill = \"lightblue\", color = \"grey60\", size = 0.2) +\n  # Underserved vulnerable tracts - highlight these\n  geom_sf(data = tract_categories %>% filter(tract_category == \"Underserved Vulnerable\"), \n          fill = \"darkred\", color = \"white\", size = 0.3) +\n  # County boundaries for context\n  geom_sf(data = pa_counties_proj, \n          fill = NA, color = \"black\", size = 0.5) +\n  # Hospital locations\n  geom_sf(data = hospitals_proj, \n          color = \"darkgreen\", size = 2, shape = 17, alpha = 0.8) +\n  # Color scale for legend\n  scale_fill_manual(\n    name = \"Tract Category\",\n    values = c(\"Non-vulnerable\" = \"grey95\", \n               \"Vulnerable (Served)\" = \"lightblue\", \n               \"Underserved Vulnerable\" = \"darkred\"),\n    guide = guide_legend(override.aes = list(size = 0.5))\n  ) +\n  # Theme and labels\n  theme_void() +\n  labs(\n    title = \"Detailed View: Underserved Vulnerable Populations in Pennsylvania\",\n    subtitle = \"Census tracts with vulnerable populations and their access to healthcare\",\n    caption = \"Red tracts: Underserved vulnerable populations (>15 miles from hospital)\\nBlue tracts: Vulnerable populations with adequate access\\nGreen triangles: Hospital locations\\nData: ACS 2022, Pennsylvania Department of Health\"\n  ) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 12, hjust = 0.5, margin = margin(b = 20)),\n    plot.caption = element_text(size = 9, hjust = 0.5, margin = margin(t = 10)),\n    legend.position = \"bottom\",\n    legend.title = element_text(size = 10, face = \"bold\"),\n    legend.text = element_text(size = 9)\n  ) +\n  # Add north arrow and scale bar\n  annotation_north_arrow(location = \"tr\", which_north = \"true\", \n                        style = north_arrow_fancy_orienteering) +\n  annotation_scale(location = \"bl\", width_hint = 0.3)\n\n# Display the map\nprint(map2)\n```\n\n::: {.cell-output-display}\n![](Fan_Yang_Assignment2_files/figure-html/unnamed-chunk-10-1.png){width=1344}\n:::\n:::\n\n\n**Requirements:**\n\n- Show underserved vulnerable tracts in a contrasting color\n- Include county boundaries for context\n- Show hospital locations\n- Use appropriate visual hierarchy (what should stand out?)\n- Include informative title and subtitle\n\n---\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to hospitals for vulnerable populations.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\n# Create a combined histogram and box plot showing distance distribution\nlibrary(patchwork)\n\n# Prepare data for visualization\nchart_data <- vulnerable_tracts_final %>%\n  filter(vulnerable) %>%  # Only show vulnerable tracts\n  mutate(\n    category = ifelse(underserved, \"Underserved\", \"Adequate Access\"),\n    category = factor(category, levels = c(\"Adequate Access\", \"Underserved\"))\n  )\n\n# Create histogram\nhist_plot <- ggplot(chart_data, aes(x = distance_to_hospital_miles, fill = category)) +\n  geom_histogram(bins = 30, alpha = 0.7, position = \"identity\") +\n  geom_vline(xintercept = 15, linetype = \"dashed\", color = \"red\", size = 1) +\n  scale_fill_manual(values = c(\"Adequate Access\" = \"lightblue\", \"Underserved\" = \"darkred\")) +\n  labs(\n    title = \"Distribution of Distance to Nearest Hospital\",\n    subtitle = \"For vulnerable census tracts in Pennsylvania\",\n    x = \"Distance to Nearest Hospital (miles)\",\n    y = \"Number of Census Tracts\",\n    fill = \"Access Category\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 12),\n    legend.position = \"bottom\"\n  ) +\n  annotate(\"text\", x = 15, y = Inf, label = \"15-mile threshold\", \n           hjust = -0.1, vjust = 1.5, color = \"red\", size = 3)\n\n# Create box plot by category\nbox_plot <- ggplot(chart_data, aes(x = category, y = distance_to_hospital_miles, fill = category)) +\n  geom_boxplot(alpha = 0.7) +\n  geom_hline(yintercept = 15, linetype = \"dashed\", color = \"red\", size = 1) +\n  scale_fill_manual(values = c(\"Adequate Access\" = \"lightblue\", \"Underserved\" = \"darkred\")) +\n  labs(\n    title = \"Distance Distribution by Access Category\",\n    x = \"Access Category\",\n    y = \"Distance to Nearest Hospital (miles)\",\n    fill = \"Access Category\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    legend.position = \"none\"\n  ) +\n  coord_flip()\n\n# Combine plots\ncombined_chart <- hist_plot / box_plot +\n  plot_annotation(\n    title = \"Healthcare Access Analysis: Distance to Hospitals for Vulnerable Populations\",\n    caption = \"Data: ACS 2022, Pennsylvania Department of Health. Vulnerable = low-income + high elderly population.\",\n    theme = theme(plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5))\n  )\n\n# Display the combined chart\nprint(combined_chart)\n```\n\n::: {.cell-output-display}\n![](Fan_Yang_Assignment2_files/figure-html/unnamed-chunk-11-1.png){width=1152}\n:::\n\n```{.r .cell-code}\n# Summary statistics for interpretation\ncat(\"Underserved tracts median distance:\", \n    round(median(chart_data$distance_to_hospital_miles[chart_data$underserved]), 1), \"miles\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUnderserved tracts median distance: 30.8 miles\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Adequate access tracts median distance:\", round(median(chart_data$distance_to_hospital_miles[!chart_data$underserved]), 1), \n    \"miles\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdequate access tracts median distance: 4.4 miles\n```\n\n\n:::\n:::\n\n\n**Suggested chart types:**\n\n- Histogram or density plot of distances\n- Box plot comparing distances across regions\n- Bar chart of underserved tracts by county\n- Scatter plot of distance vs. vulnerable population size\n\n**Requirements:**\n\n- Clear axes labels with units\n- Appropriate title\n- Professional formatting\n- Brief interpretation (1-2 sentences as a caption or in text)\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\nChoose your own additional spatial dataset and conduct a supplementary analysis.\n\n### Challenge Options\n\nChoose ONE of the following challenge exercises, or propose your own research question using OpenDataPhilly data (https://opendataphilly.org/datasets/). \n\n**Note these are just loose suggestions to spark ideas - follow or make your own as the data permits and as your ideas evolve. This analysis should include bringing in your own dataset, ensuring the projection/CRS of your layers align and are appropriate for the analysis (not lat/long or geodetic coordinate systems). The analysis portion should include some combination of spatial and attribute operations to answer a relatively straightforward question**\n\n---\n\n#### Education & Youth Services\n\n**Option A: Educational Desert Analysis**\n- **Data:** Schools, Libraries, Recreation Centers, Census tracts (child population)\n- **Question:** \"Which neighborhoods lack adequate educational infrastructure for children?\"\n- **Operations:** Buffer schools/libraries (0.5 mile walking distance), identify coverage gaps, overlay with child population density\n- **Policy relevance:** School district planning, library placement, after-school program siting\n\n**Option B: School Safety Zones**\n- **Data:** Schools, Crime Incidents, Bike Network\n- **Question:** \"Are school zones safe for walking/biking, or are they crime hotspots?\"\n- **Operations:** Buffer schools (1000ft safety zone), spatial join with crime incidents, assess bike infrastructure coverage\n- **Policy relevance:** Safe Routes to School programs, crossing guard placement\n\n---\n\n#### Environmental Justice\n\n**Option C: Green Space Equity** \n- **Data:** Parks, Street Trees, Census tracts (race/income demographics)\n- **Question:** \"Do low-income and minority neighborhoods have equitable access to green space?\"\n- **Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree canopy or park acreage per capita, compare by demographics\n- **Policy relevance:** Climate resilience, environmental justice, urban forestry investment\n---\n\n#### Public Safety & Justice\n\n**Option D: Crime & Community Resources**\n- **Data:** Crime Incidents, Recreation Centers, Libraries, Street Lights\n- **Question:** \"Are high-crime areas underserved by community resources?\"\n- **Operations:** Aggregate crime counts to census tracts or neighborhoods, count community resources per area, spatial correlation analysis\n- **Policy relevance:** Community investment, violence prevention strategies\n---\n\n#### Infrastructure & Services\n\n**Option E: Polling Place Accessibility**\n- **Data:** Polling Places, SEPTA stops, Census tracts (elderly population, disability rates)\n- **Question:** \"Are polling places accessible for elderly and disabled voters?\"\n- **Operations:** Buffer polling places and transit stops, identify vulnerable populations, find areas lacking access\n- **Policy relevance:** Voting rights, election infrastructure, ADA compliance\n\n---\n\n#### Health & Wellness\n\n**Option F: Recreation & Population Health**\n- **Data:** Recreation Centers, Playgrounds, Parks, Census tracts (demographics)\n- **Question:** \"Is lack of recreation access associated with vulnerable populations?\"\n- **Operations:** Calculate recreation facilities per capita by neighborhood, buffer facilities for walking access, overlay with demographic indicators\n- **Policy relevance:** Public health investment, recreation programming, obesity prevention\n\n---\n\n#### Emergency Services\n\n**Option G: EMS Response Coverage**\n- **Data:** Fire Stations, EMS stations, Population density, High-rise buildings\n- **Question:** \"Are population-dense areas adequately covered by emergency services?\"\n- **Operations:** Create service area buffers (5-minute drive = ~2 miles), assess population coverage, identify gaps in high-density areas\n- **Policy relevance:** Emergency preparedness, station siting decisions\n\n---\n\n#### Arts & Culture\n\n**Option H: Cultural Asset Distribution**\n- **Data:** Public Art, Museums, Historic sites/markers, Neighborhoods\n- **Question:** \"Do all neighborhoods have equitable access to cultural amenities?\"\n- **Operations:** Count cultural assets per neighborhood, normalize by population, compare distribution across demographic groups\n- **Policy relevance:** Cultural equity, tourism, quality of life, neighborhood identity\n\n---\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/\n- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates\n- Always check the Metadata for a data dictionary of the fields.\n\n**Additional Sources:**\n- **Pennsylvania Open Data:** https://data.pa.gov/\n- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns\n- **TIGER/Line (via tigris):** Geographic boundaries\n\n### Recommended Starting Points\n\n**If you're feeling confident:** Choose an advanced challenge with multiple data layers. \n**If you are a beginner, choose something more manageable that helps you understand the basics**\n\n\n**If you have a different idea:** Propose your own question! Just make sure:\n- You can access the spatial data\n- You can perform at least 2 spatial operations\n\n### Your Analysis\n\n**Your Task:**\n\n1. **Find and load additional data**\n   - Document your data source\n   - Check and standardize the CRS\n   - Provide basic summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load your additional dataset\n# For this analysis, I'll use Philadelphia Bus Transit Shelters data from OpenDataPhilly\n# This will help us understand if vulnerable populations have adequate public transit access to hospitals\n\n# Load Bus Transit Shelters data\nbus_shelters <- st_read(here(\"assignments\", \"assignment_2\", \"data\", \"bus_transit_shelters.geojson\"), quiet = TRUE)\n\n# Transform to Pennsylvania State Plane South CRS to match our analysis\nbus_shelters <- st_transform(bus_shelters, pa_crs)\n\n# Create summary table of bus shelter data\nbus_shelter_summary <- data.frame(\n  Metric = c(\"Number of Bus Shelters\", \"CRS\"),\n  Value = c(nrow(bus_shelters), st_crs(bus_shelters)$input)\n)\n\nkable(bus_shelter_summary,\n      col.names = c(\"Metric\", \"Value\"),\n      caption = \"Bus Shelter Dataset Summary\",\n      align = c(\"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Bus Shelter Dataset Summary\n\n|Metric                 |Value     |\n|:----------------------|:---------|\n|Number of Bus Shelters |487       |\n|CRS                    |EPSG:2272 |\n\n\n:::\n\n```{.r .cell-code}\n# Show summary of shelter types\nshelter_types <- table(bus_shelters$productgroup)\nshelter_types_df <- data.frame(\n  Product_Group = names(shelter_types),\n  Count = as.numeric(shelter_types)\n)\n\nkable(shelter_types_df,\n      col.names = c(\"Product Group\", \"Count\"),\n      caption = \"Bus Shelter Types Distribution\",\n      align = c(\"l\", \"c\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Bus Shelter Types Distribution\n\n|Product Group | Count |\n|:-------------|:-----:|\n|Digital       |  60   |\n|Static        |  427  |\n\n\n:::\n\n```{.r .cell-code}\n# Show first few shelter locations\nshelter_sample <- bus_shelters %>% \n  st_drop_geometry() %>% \n  select(site, siteid, productgroup) %>%\n  head(6)\n\nkable(shelter_sample,\n      col.names = c(\"Site\", \"Site ID\", \"Product Group\"),\n      caption = \"Sample Bus Shelter Locations\",\n      align = c(\"l\", \"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Sample Bus Shelter Locations\n\n|Site                              |Site ID   |Product Group |\n|:---------------------------------|:---------|:-------------|\n|Chestnut St & 60th St -           |pa-002294 |Static        |\n|Roosevelt Blvd & Broad St NE      |pa-002180 |Static        |\n|Roosevelt Blvd & Broad St - FS SE |pa-002181 |Static        |\n|35th & Grays Ferry NE             |pa-002338 |Static        |\n|60th St & Haverford Av NW         |pa-001485 |Static        |\n|Grays Ferry Av & 35th St -        |pa-002284 |Static        |\n\n\n:::\n:::\n\n\n**Questions to answer:**\n\n- What dataset did you choose and why?  \n  **Philadelphia Bus Transit Shelters** - public transit affects healthcare access for vulnerable populations without cars.\n\n- What is the data source and date?  \n  **OpenDataPhilly** (Philadelphia city open data), **2025**\n\n- How many features does it contain? **487 bus shelters**\n\n- What CRS is it in? Did you need to transform it?  \n  Original: WGS 84. Transformed to PA State Plane South (EPSG:2272) for distance calculations.\n\n---\n\n2. **Pose a research question**\n\n**Research Question:** \"Do vulnerable populations in Philadelphia have adequate access to bus transit shelters, and how does this relate to hospital access?\"\n\nThis analysis examines the spatial relationship between vulnerable tracts (low-income OR high elderly), bus shelters, and hospitals in Philadelphia.\n\n---\n\n3. **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n**Required operations (choose 2+):**\n\n- Buffers\n- Spatial joins\n- Spatial filtering with predicates\n- Distance calculations\n- Intersections or unions\n- Point-in-polygon aggregation\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for Philadelphia area tracts (bus shelters are concentrated in Philadelphia)\nphilly_tracts <- vulnerable_tracts_final %>%\n  filter(str_detect(NAME, \"Philadelphia\"))\n\n# Create summary table for Philadelphia analysis\nphilly_summary <- data.frame(\n  Metric = c(\"Vulnerable Tracts in Philadelphia\", \"Underserved Tracts in Philadelphia\"),\n  Count = c(sum(philly_tracts$vulnerable), sum(philly_tracts$underserved))\n)\n\nkable(philly_summary,\n      col.names = c(\"Metric\", \"Count\"),\n      caption = \"Philadelphia Vulnerable Population Summary\",\n      align = c(\"l\", \"c\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Philadelphia Vulnerable Population Summary\n\n|Metric                             | Count |\n|:----------------------------------|:-----:|\n|Vulnerable Tracts in Philadelphia  |  208  |\n|Underserved Tracts in Philadelphia |   0   |\n\n\n:::\n\n```{.r .cell-code}\n# Calculate distance from vulnerable tracts to nearest bus shelter\nphilly_vulnerable <- philly_tracts %>% filter(vulnerable)\nphilly_centroids <- st_centroid(philly_vulnerable)\nshelter_distances <- st_distance(philly_centroids, bus_shelters)\nmin_shelter_distances <- apply(shelter_distances, 1, min)\nmin_shelter_distances_miles <- as.numeric(min_shelter_distances) * 0.000621371\n\n# Add transit access information (0.25 mile = typical walking distance)\nphilly_vulnerable_with_transit <- philly_vulnerable %>%\n  mutate(\n    distance_to_shelter_miles = min_shelter_distances_miles,\n    has_transit_access = distance_to_shelter_miles <= 0.25,\n    transit_accessible = vulnerable & has_transit_access\n  )\n\n# Create summary table for transit access analysis\ntransit_access_summary <- data.frame(\n  Metric = c(\n    \"Average Distance to Bus Shelter\",\n    \"Tracts within 0.25 miles of Shelter\",\n    \"Percentage with Transit Access\"\n  ),\n  Value = c(\n    paste(round(mean(min_shelter_distances_miles), 2), \"miles\"),\n    sum(philly_vulnerable_with_transit$has_transit_access),\n    paste(round(sum(philly_vulnerable_with_transit$has_transit_access) / nrow(philly_vulnerable_with_transit) * 100, 1), \"%\")\n  )\n)\n\nkable(transit_access_summary,\n      col.names = c(\"Metric\", \"Value\"),\n      caption = \"Transit Access Analysis Summary\",\n      align = c(\"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Transit Access Analysis Summary\n\n|Metric                              |Value      |\n|:-----------------------------------|:----------|\n|Average Distance to Bus Shelter     |0.87 miles |\n|Tracts within 0.25 miles of Shelter |10         |\n|Percentage with Transit Access      |4.8 %      |\n\n\n:::\n\n```{.r .cell-code}\n# Buffer analysis: 0.25 mile buffers around bus shelters\nshelter_buffers <- st_buffer(bus_shelters, dist = 402.34)  # 0.25 mile in meters\ntracts_in_shelter_buffer <- st_join(philly_vulnerable, shelter_buffers, \n                                    join = st_intersects, left = FALSE)\n\n# Create summary table for buffer analysis\nbuffer_summary <- data.frame(\n  Metric = c(\"Vulnerable Tracts Intersecting Shelter Buffers\"),\n  Count = c(length(unique(tracts_in_shelter_buffer$GEOID)))\n)\n\nkable(buffer_summary,\n      col.names = c(\"Metric\", \"Count\"),\n      caption = \"Buffer Analysis Summary\",\n      align = c(\"l\", \"c\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Buffer Analysis Summary\n\n|Metric                                         | Count |\n|:----------------------------------------------|:-----:|\n|Vulnerable Tracts Intersecting Shelter Buffers |  173  |\n\n\n:::\n\n```{.r .cell-code}\n# Cross-tabulation of transit and hospital access\naccess_crosstab <- philly_vulnerable_with_transit %>%\n  st_drop_geometry() %>%\n  mutate(\n    transit_status = ifelse(has_transit_access, \"Has Transit\", \"No Transit\"),\n    hospital_status = ifelse(underserved, \"Underserved\", \"Has Hospital Access\")\n  ) %>%\n  group_by(transit_status, hospital_status) %>%\n  summarise(count = n(), .groups = 'drop')\n\nkable(access_crosstab,\n      col.names = c(\"Transit Status\", \"Hospital Status\", \"Count\"),\n      caption = \"Cross-tabulation: Transit Access vs Hospital Access\",\n      align = c(\"l\", \"l\", \"c\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Cross-tabulation: Transit Access vs Hospital Access\n\n|Transit Status |Hospital Status     | Count |\n|:--------------|:-------------------|:-----:|\n|Has Transit    |Has Hospital Access |  10   |\n|No Transit     |Has Hospital Access |  198  |\n\n\n:::\n\n```{.r .cell-code}\n# Create visualization map\ntransit_map <- ggplot() +\n  geom_sf(data = philly_tracts, fill = \"gray95\", color = \"gray70\", size = 0.2) +\n  geom_sf(data = philly_vulnerable_with_transit, \n          aes(fill = distance_to_shelter_miles), color = \"white\", size = 0.1) +\n  geom_sf(data = shelter_buffers, fill = \"lightblue\", alpha = 0.15, color = NA) +\n  geom_sf(data = bus_shelters, color = \"blue\", size = 1.5, shape = 16, alpha = 0.7) +\n  geom_sf(data = hospitals_proj %>% \n            filter(st_intersects(geometry, st_union(philly_tracts), sparse = FALSE)), \n          color = \"red\", size = 3, shape = 17, alpha = 0.8) +\n  scale_fill_viridis_c(\n    name = \"Distance to\\nBus Shelter\\n(miles)\",\n    option = \"plasma\",\n    direction = -1,\n    breaks = c(0, 0.25, 0.5, 0.75, 1.0),\n    limits = c(0, max(min_shelter_distances_miles))\n  ) +\n  theme_void() +\n  labs(\n    title = \"Public Transit Access for Vulnerable Populations in Philadelphia\",\n    subtitle = \"Distance from vulnerable tracts to nearest bus shelter with 0.25-mile walking buffers\",\n    caption = \"Blue circles: Bus shelters with 0.25-mile buffers\\nRed triangles: Hospitals\\nData: ACS 2022, OpenDataPhilly 2025\"\n  ) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 12, hjust = 0.5),\n    plot.caption = element_text(size = 9, hjust = 0.5),\n    legend.position = \"right\",\n    legend.title = element_text(size = 10),\n    legend.text = element_text(size = 9)\n  )\n\nprint(transit_map)\n```\n\n::: {.cell-output-display}\n![](Fan_Yang_Assignment2_files/figure-html/unnamed-chunk-13-1.png){width=1344}\n:::\n\n```{.r .cell-code}\n# Create final summary statistics table\nfinal_summary <- data.frame(\n  Metric = c(\n    \"Tracts with Transit Access (<0.25 mi)\",\n    \"Average Distance to Bus Shelter\",\n    \"Maximum Distance to Bus Shelter\"\n  ),\n  Value = c(\n    paste(sum(philly_vulnerable_with_transit$has_transit_access), \n          \"(\", round(sum(philly_vulnerable_with_transit$has_transit_access) / nrow(philly_vulnerable_with_transit) * 100, 1), \"%)\"),\n    paste(round(mean(min_shelter_distances_miles), 2), \"miles\"),\n    paste(round(max(min_shelter_distances_miles), 2), \"miles\")\n  )\n)\n\nkable(final_summary,\n      col.names = c(\"Metric\", \"Value\"),\n      caption = \"Final Transit Access Summary Statistics\",\n      align = c(\"l\", \"l\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: Final Transit Access Summary Statistics\n\n|Metric                                |Value       |\n|:-------------------------------------|:-----------|\n|Tracts with Transit Access (<0.25 mi) |10 ( 4.8 %) |\n|Average Distance to Bus Shelter       |0.87 miles  |\n|Maximum Distance to Bus Shelter       |3.53 miles  |\n\n\n:::\n:::\n\n\n**Analysis requirements:**\n\n- Clear code comments explaining each step\n- Appropriate CRS transformations\n- Summary statistics or counts\n- At least one map showing your findings\n- Brief interpretation of results (3-5 sentences)\n\n**Your interpretation:**\n\nPhiladelphia has 487 bus shelters covering 208 vulnerable tracts. Only 4.8% of vulnerable tracts are within 0.25 miles of a shelter (average distance: 0.87 miles). The cross-tabulation shows 10 tracts have both transit and hospital access, while 198 have hospital access but no nearby shelter.\n\nThis suggests two issues: (1) Philadelphia's hospital coverage is good—all vulnerable tracts can reach a hospital within 15 miles; (2) bus shelter distribution may not align well with vulnerable populations' locations. Many vulnerable residents likely rely on bus stops without shelters.\n\n**I think this analysis only captures shelters, not all bus stops. Many areas have bus service without shelters, which could underestimate actual transit access.**\n\n\n## Improvements from Assignment 1\n\nBased on feedback from Assignment 1, I have implemented the following key improvements:\n\n- **Protected Census API Key** - Hidden the actual API key from the output\n- **Enhanced Table Visualizations** - Replaced raw outputs with professional `kable()` tables  \n- **Improved Code Documentation** - Added comprehensive comments and better organization\n- **Professional Presentation** - Consistent formatting and clear analysis explanations\n\n\n---",
    "supporting": [
      "Fan_Yang_Assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}